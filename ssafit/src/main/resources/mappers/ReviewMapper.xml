<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace는 연결할 매퍼 인터페이스의 전체 식별자 이름(full identifier, 패키지+클래스명)으로 설정한다. -->
<mapper namespace="com.ssafy.ssafit.model.dao.ReviewDao">

	<!--  모든 리뷰 불러오기 -->
    <select id="reviewSelectAll" resultType="Review">
        SELECT * FROM review
    </select>
    
	<!-- 특정 리뷰 가져오기 -->
    <select id="reviewSelectOne" resultType="Review" parameterType="int">
        SELECT * FROM review 
        WHERE reviewId = #{reviewId};
    </select>
    
    <!-- 마이페이지 리뷰 가져오기 -->
    <select id="reviewUserAll" resultType="Review" parameterType="String">
        SELECT * FROM review 
        WHERE userId = #{userId};
    </select>

	<!-- 리뷰 작성 -->
    <insert id="reviewInsert" parameterType="Review" keyProperty="reviewId" useGeneratedKeys="true" >
        INSERT INTO review (userId, userName, title, content, routineId)
        VALUES (#{userId}, #{userName}, #{title}, #{content}, #{routineId})
    </insert>

    <!-- 리뷰 수정, 해당 작성자만 수정할 수 있도록 함! -->
    <!--  작성자 검증은 컨트롤러에서 먼저 선행된 상태임! -->
    <update id="reviewUpdate" parameterType="Review">
        UPDATE review SET title=#{title}, content=#{content}, favorite=#{favorite}, done=#{done}
        WHERE reviewId = #{reviewId}
    </update>

    <!-- 리뷰 삭제, 해당 작성자만 수정할 수 있도록 함!  -->
    <!--  작성자 검증은 컨트롤러에서 먼저 선행된 상태임! -->
    <delete id="reviewDelete" parameterType="int">
        DELETE FROM review 
        WHERE reviewId = #{reviewId};
    </delete>
    
   	<!-- 리뷰 조회수 증가 -->
	<update id="reviewUpdateViewCnt" parameterType="int">
        UPDATE review
        SET viewCnt = viewCnt + 1
        WHERE reviewId = #{reviewId};
    </update>
    
    <!-- 리뷰 검색 -->
	<select id="searchReview" parameterType="ReviewCondition" resultType="Review">
        SELECT *
        FROM review
        <if test="reviewTitle != 'none' or reviewRoutineId != 0 or reviewAuthorName != 'none'">
	        WHERE 
        </if>
            <trim prefixOverrides="AND">
	            <if test="reviewTitle != 'none'">
                    AND title LIKE concat('%', #{reviewTitle}, '%')
                </if>
               <if test="reviewRoutineId != 0">
                	AND routineId = #{reviewRoutineId}
               </if>
			   <if test="reviewAuthorName != 'none'">
                    AND userName LIKE concat('%', #{reviewAuthorName}, '%')
               </if>
            </trim>
           <if test="reviewDirection != null">
               <if test="reviewDirection == '오름차순'">
                   ORDER BY viewCnt ASC;
               </if>
               <if test="reviewDirection == '내림차순'">
                   ORDER BY viewCnt DESC;
               </if>
           </if>
            
    </select>
	
</mapper>